import org.mechdancer.algebra.implement.vector.listVectorOfZero
import org.mechdancer.algebra.implement.vector.toListVector
import org.mechdancer.filters.FIR
import org.mechdancer.filters.signal.EnergySignal
import org.mechdancer.filters.signal.noise
import org.mechdancer.remote.presets.remoteHub
import kotlin.random.Random

private const val text =
    "3.60964518203858e-05\t9.97978642780788e-05\t0.000154377904271097\t0.000177653009355707\t0.000156409983080899\t9.18693391288463e-05\t1.52242450294816e-19\t-9.35583675933064e-05\t-0.000162209740444337\t-0.000187612724887345\t-0.000166003650131910\t-0.000109257430850845\t-4.02286341699652e-05\t1.59544891412400e-05\t4.14171449499272e-05\t3.22822001989539e-05\t-3.45936861528254e-19\t-3.33692112755031e-05\t-4.42509837463642e-05\t-1.76173283021927e-05\t4.59027558130679e-05\t0.000128798459363308\t0.000202125854581004\t0.000235873142843751\t0.000210500130206128\t0.000125269482015800\t-2.72663413211818e-18\t-0.000130773357233136\t-0.000229392147035683\t-0.000268295445068596\t-0.000239938589334792\t-0.000159531203625286\t-5.93092626823780e-05\t2.37379747727079e-05\t6.21579663969416e-05\t4.88450088053745e-05\t-1.75861298911441e-18\t-5.12447985702277e-05\t-6.84133449493355e-05\t-2.74076486411281e-05\t7.18272430542700e-05\t0.000202623653946893\t0.000319555636540528\t0.000374602243137301\t0.000335691132060480\t0.000200522507836750\t6.74476629849624e-19\t-0.000210682243444855\t-0.000370561887427937\t-0.000434440037469110\t-0.000389330345731338\t-0.000259321828809112\t-9.65542067537539e-05\t3.86931165961300e-05\t0.000101419246184769\t7.97581989220013e-05\t-7.18110030349351e-19\t-8.37499976180189e-05\t-0.000111823996216537\t-4.47965831161337e-05\t0.000117372390989314\t0.000330978679946464\t0.000521703232752043\t0.000611157305191606\t0.000547230997470473\t0.000326579353478769\t-6.57706223208459e-18\t-0.000342371718413743\t-0.000601433115180327\t-0.000704163963807770\t-0.000630149225189013\t-0.000419094728904228\t-0.000155797991985971\t6.23324359289536e-05\t0.000163104217104750\t0.000128044705093144\t-1.03571564736430e-18\t-0.000133965806458165\t-0.000178537581463932\t-7.13855367052769e-05\t0.000186676208626416\t0.000525374941058222\t0.000826474329444563\t0.000966244445858000\t0.000863427522967259\t0.000514232410908390\t2.58540143696240e-18\t-0.000536892597125819\t-0.000941200983995243\t-0.00109969713571820\t-0.000982079554194401\t-0.000651808491036534\t-0.000241810769579469\t9.65463910240547e-05\t0.000252114728738116\t0.000197519210138425\t-1.41727675016032e-18\t-0.000205818488904075\t-0.000273746924831084\t-0.000109235786659440\t0.000285092121776474\t0.000800781472390611\t0.00125727351225107\t0.00146707010115153\t0.00130846257704096\t0.000777812442002094\t-1.43033493560734e-17\t-0.000809076526594292\t-0.00141576734619286\t-0.00165119980907052\t-0.00147197409884037\t-0.000975238117522185\t-0.000361171833660882\t0.000143956906740245\t0.000375287208920770\t0.000293531706584446\t-1.83992352257640e-18\t-0.000304876702712647\t-0.000404858715473125\t-0.000161304072204016\t0.000420342854837827\t0.00117891528793487\t0.00184824991236952\t0.00215355762748527\t0.00191802444696048\t0.00113859049382733\t7.60649978615901e-18\t-0.00118119167441673\t-0.00206424481937892\t-0.00240447706856746\t-0.00214084964652481\t-0.00141669081505508\t-0.000524047011521675\t0.000208638537233004\t0.000543306939195095\t0.000424492410039835\t-2.27832357639119e-18\t-0.000439995674119804\t-0.000583718938609832\t-0.000232346573628057\t0.000604922779415643\t0.00169511448042773\t0.00265529203135453\t0.00309142294441200\t0.00275119730850727\t0.00163198568795406\t-2.72273893275681e-17\t-0.00169074797385036\t-0.00295289913448575\t-0.00343758365963806\t-0.00305900768534304\t-0.00202324281984340\t-0.000748063924359854\t0.000297697904521578\t0.000774919874022269\t0.000605242699720431\t-2.70620031118012e-18\t-0.000626987241090875\t-0.000831605340489185\t-0.000330957284540963\t0.000861543348642256\t0.00241400097934768\t0.00378122024311388\t0.00440230198600148\t0.00391801162075719\t0.00232436423353892\t-8.72433228625985e-18\t-0.00240890717741539\t-0.00420823759602048\t-0.00490047925774250\t-0.00436237718041340\t-0.00288650495121797\t-0.00106774990681132\t0.000425146528076319\t0.00110733195144330\t0.000865437263813642\t-3.09790786788555e-18\t-0.000897879602521453\t-0.00119191856398297\t-0.000474789471771484\t0.00123719134127454\t0.00347023975047491\t0.00544188018197013\t0.00634344929404296\t0.00565294487438704\t0.00335824578085001\t-9.81821071032619e-18\t-0.00349091541826237\t-0.00610848894275149\t-0.00712569794766619\t-0.00635491710415519\t-0.00421309135296038\t-0.00156165725390666\t0.000623146118420882\t0.00162672252663131\t0.00127440336234985\t-3.42996827733008e-18\t-0.00132899405361990\t-0.00176910665931685\t-0.000706759120227791\t0.00184728193673033\t0.00519813619114145\t0.00817895688714405\t0.00956769481402769\t0.00855785762236964\t0.00510376296436427\t-1.07017112500048e-17\t-0.00534991089901298\t-0.00940353752449984\t-0.0110212774808028\t-0.00987787499520442\t-0.00658280994740131\t-0.00245339093295236\t0.000984604666373364\t0.00258585359496334\t0.00203868924649940\t-3.68247867084419e-18\t-0.00215533324000220\t-0.00289040074453411\t-0.00116375519668809\t0.00306686708685159\t0.00870521291925595\t0.0138233200411433\t0.0163279986186461\t0.0147552920761057\t0.00889601632266546\t-1.13218790973436e-17\t-0.00954948726959909\t-0.0170051880084596\t-0.0202090508293088\t-0.0183823970022164\t-0.0124455327182524\t-0.00471752977545719\t0.00192791096548760\t0.00516290564252156\t0.00415680412637412\t-3.84030420832996e-18\t-0.00460716012380109\t-0.00634542240886759\t-0.00263020938980062\t0.00715548070966169\t0.0210331295166406\t0.0347134842951482\t0.0427983078642483\t0.0405721944907029\t0.0258146479179467\t-1.16415429459548e-17\t-0.0315950231991503\t-0.0610273322663510\t-0.0798139747105914\t-0.0814487690045443\t-0.0635385537559895\t-0.0288611609057117\t0.0150499827612143\t0.0577463214323700\t0.0886363217805460\t0.0998926006842035\t0.0886363217805460\t0.0577463214323700\t0.0150499827612143\t-0.0288611609057117\t-0.0635385537559895\t-0.0814487690045443\t-0.0798139747105914\t-0.0610273322663510\t-0.0315950231991503\t-1.16415429459548e-17\t0.0258146479179467\t0.0405721944907029\t0.0427983078642483\t0.0347134842951482\t0.0210331295166406\t0.00715548070966169\t-0.00263020938980062\t-0.00634542240886759\t-0.00460716012380109\t-3.84030420832996e-18\t0.00415680412637412\t0.00516290564252156\t0.00192791096548760\t-0.00471752977545719\t-0.0124455327182524\t-0.0183823970022164\t-0.0202090508293088\t-0.0170051880084596\t-0.00954948726959909\t-1.13218790973436e-17\t0.00889601632266546\t0.0147552920761057\t0.0163279986186461\t0.0138233200411433\t0.00870521291925595\t0.00306686708685159\t-0.00116375519668809\t-0.00289040074453411\t-0.00215533324000220\t-3.68247867084419e-18\t0.00203868924649940\t0.00258585359496334\t0.000984604666373364\t-0.00245339093295236\t-0.00658280994740131\t-0.00987787499520442\t-0.0110212774808028\t-0.00940353752449984\t-0.00534991089901298\t-1.07017112500048e-17\t0.00510376296436427\t0.00855785762236964\t0.00956769481402769\t0.00817895688714405\t0.00519813619114145\t0.00184728193673033\t-0.000706759120227791\t-0.00176910665931685\t-0.00132899405361990\t-3.42996827733008e-18\t0.00127440336234985\t0.00162672252663131\t0.000623146118420882\t-0.00156165725390666\t-0.00421309135296038\t-0.00635491710415519\t-0.00712569794766619\t-0.00610848894275149\t-0.00349091541826237\t-9.81821071032619e-18\t0.00335824578085001\t0.00565294487438704\t0.00634344929404296\t0.00544188018197013\t0.00347023975047491\t0.00123719134127454\t-0.000474789471771484\t-0.00119191856398297\t-0.000897879602521453\t-3.09790786788555e-18\t0.000865437263813642\t0.00110733195144330\t0.000425146528076319\t-0.00106774990681132\t-0.00288650495121797\t-0.00436237718041340\t-0.00490047925774250\t-0.00420823759602048\t-0.00240890717741539\t-8.72433228625985e-18\t0.00232436423353892\t0.00391801162075719\t0.00440230198600148\t0.00378122024311388\t0.00241400097934768\t0.000861543348642256\t-0.000330957284540963\t-0.000831605340489185\t-0.000626987241090875\t-2.70620031118012e-18\t0.000605242699720431\t0.000774919874022269\t0.000297697904521578\t-0.000748063924359854\t-0.00202324281984340\t-0.00305900768534304\t-0.00343758365963806\t-0.00295289913448575\t-0.00169074797385036\t-2.72273893275681e-17\t0.00163198568795406\t0.00275119730850727\t0.00309142294441200\t0.00265529203135453\t0.00169511448042773\t0.000604922779415643\t-0.000232346573628057\t-0.000583718938609832\t-0.000439995674119804\t-2.27832357639119e-18\t0.000424492410039835\t0.000543306939195095\t0.000208638537233004\t-0.000524047011521675\t-0.00141669081505508\t-0.00214084964652481\t-0.00240447706856746\t-0.00206424481937892\t-0.00118119167441673\t7.60649978615901e-18\t0.00113859049382733\t0.00191802444696048\t0.00215355762748527\t0.00184824991236952\t0.00117891528793487\t0.000420342854837827\t-0.000161304072204016\t-0.000404858715473125\t-0.000304876702712647\t-1.83992352257640e-18\t0.000293531706584446\t0.000375287208920770\t0.000143956906740245\t-0.000361171833660882\t-0.000975238117522185\t-0.00147197409884037\t-0.00165119980907052\t-0.00141576734619286\t-0.000809076526594292\t-1.43033493560734e-17\t0.000777812442002094\t0.00130846257704096\t0.00146707010115153\t0.00125727351225107\t0.000800781472390611\t0.000285092121776474\t-0.000109235786659440\t-0.000273746924831084\t-0.000205818488904075\t-1.41727675016032e-18\t0.000197519210138425\t0.000252114728738116\t9.65463910240547e-05\t-0.000241810769579469\t-0.000651808491036534\t-0.000982079554194401\t-0.00109969713571820\t-0.000941200983995243\t-0.000536892597125819\t2.58540143696240e-18\t0.000514232410908390\t0.000863427522967259\t0.000966244445858000\t0.000826474329444563\t0.000525374941058222\t0.000186676208626416\t-7.13855367052769e-05\t-0.000178537581463932\t-0.000133965806458165\t-1.03571564736430e-18\t0.000128044705093144\t0.000163104217104750\t6.23324359289536e-05\t-0.000155797991985971\t-0.000419094728904228\t-0.000630149225189013\t-0.000704163963807770\t-0.000601433115180327\t-0.000342371718413743\t-6.57706223208459e-18\t0.000326579353478769\t0.000547230997470473\t0.000611157305191606\t0.000521703232752043\t0.000330978679946464\t0.000117372390989314\t-4.47965831161337e-05\t-0.000111823996216537\t-8.37499976180189e-05\t-7.18110030349351e-19\t7.97581989220013e-05\t0.000101419246184769\t3.86931165961300e-05\t-9.65542067537539e-05\t-0.000259321828809112\t-0.000389330345731338\t-0.000434440037469110\t-0.000370561887427937\t-0.000210682243444855\t6.74476629849624e-19\t0.000200522507836750\t0.000335691132060480\t0.000374602243137301\t0.000319555636540528\t0.000202623653946893\t7.18272430542700e-05\t-2.74076486411281e-05\t-6.84133449493355e-05\t-5.12447985702277e-05\t-1.75861298911441e-18\t4.88450088053745e-05\t6.21579663969416e-05\t2.37379747727079e-05\t-5.93092626823780e-05\t-0.000159531203625286\t-0.000239938589334792\t-0.000268295445068596\t-0.000229392147035683\t-0.000130773357233136\t-2.72663413211818e-18\t0.000125269482015800\t0.000210500130206128\t0.000235873142843751\t0.000202125854581004\t0.000128798459363308\t4.59027558130679e-05\t-1.76173283021927e-05\t-4.42509837463642e-05\t-3.33692112755031e-05\t-3.45936861528254e-19\t3.22822001989539e-05\t4.14171449499272e-05\t1.59544891412400e-05\t-4.02286341699652e-05\t-0.000109257430850845\t-0.000166003650131910\t-0.000187612724887345\t-0.000162209740444337\t-9.35583675933064e-05\t1.52242450294816e-19\t9.18693391288463e-05\t0.000156409983080899\t0.000177653009355707\t0.000154377904271097\t9.97978642780788e-05\t3.60964518203858e-05"
private val fir = FIR(text.split('\t').map { it.toDouble() }.toList())

fun main() {
    val remote = remoteHub("信号仿真").apply {
        openAllNetworks()
        println(networksInfo())
    }

//    val signal = EnergySignal(values = (.0..2 * PI).sample(.1, ::sin))
    val delay = 200

    while (true) {
        val engine = java.util.Random()
        val signal = EnergySignal(1.0 / 10000, values = List(500) { engine.nextGaussian() }.toListVector())
        val input = signal
        val environment = List(delay) { i ->
            (1 - i / delay.toDouble()) * Random.nextDouble() / (delay * .25)
        }
        var output = EnergySignal(1.0 / 10000, values = listVectorOfZero(1))
        environment.forEachIndexed { i, k ->
            output += input.delay(i) * k
        }
        output = output.noise(4.0)
        remote.paint("发射", input)
        remote.paint("接收", output)
        remote.paint("自相关", (input xcorr input) * .01)
        remote.paint("互相关", (output xcorr input) * .5)
        Thread.sleep(1000)
    }
}

// 采样
private fun ClosedFloatingPointRange<Double>.sample(
    step: Double,
    f: (Double) -> Double
) =
    sequence {
        var t = start
        while (t < endInclusive) {
            yield(f(t))
            t += step
        }
    }.toList().toListVector()
