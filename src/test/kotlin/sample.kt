import org.mechdancer.filters.FIR
import org.mechdancer.remote.presets.remoteHub
import java.io.File

private const val text =
    "0.000233734093549068\t0.000149393692759562\t-0.000256275034349048\t-0.000146208435135275\t-1.88860254582444e-18\t-0.000340075006611201\t-0.000309513134087135\t0.000113397400870325\t-1.55746850936609e-18\t-0.000121156263881998\t0.000353168982941690\t0.000414074939185426\t-2.46576282319687e-18\t0.000201897953248419\t0.000375855039448241\t-0.000232191984115153\t-0.000384043196852398\t2.05597875282510e-05\t-0.000359086942294873\t-0.000694151368308835\t8.79060786691984e-18\t0.000179235085265057\t-0.000280251264485714\t0.000324280852789874\t0.000916522266510848\t0.000202450550913525\t0.000117659638473586\t0.000784910439628181\t-1.58096901435751e-17\t-0.000865435559158032\t-0.000143028393633871\t-0.000271284034347819\t-0.00135348348311770\t-0.000527584554480126\t0.000502105581396477\t-0.000353443460829516\t1.81788076872846e-17\t0.00165492588564483\t0.000940149882153386\t-5.90542926913762e-05\t0.00120877793273388\t0.000799790958619829\t-0.00141471096504049\t-0.000829036893841308\t-9.52437876235476e-18\t-0.00201188775439575\t-0.00186045613262307\t0.000690273436148057\t-6.38082885321873e-18\t-0.000749500956901239\t0.00219345642563409\t0.00257564997908850\t5.63755722469833e-18\t0.00125163620137050\t0.00231971014975538\t-0.00142445026255850\t-0.00233868335802764\t0.000124132524352666\t-0.00214733992811243\t-0.00410787152017713\t4.50464825015110e-17\t0.00103666214190737\t-0.00160125998347297\t0.00182971474219376\t0.00510556105384251\t0.00111323505890050\t0.000638596535478298\t0.00420479647146799\t-1.70956881587181e-17\t-0.00451755565101351\t-0.000737150642353651\t-0.00138074347524665\t-0.00680462205736687\t-0.00262077103889252\t0.00246522364549477\t-0.00171576226676693\t1.63477914700881e-17\t0.00786267198717786\t0.00442169724692805\t-0.000275067382330837\t0.00557872154997813\t0.00365914058701042\t-0.00641959383225668\t-0.00373321068230810\t-7.21675058253438e-18\t-0.00893676402471147\t-0.00821510913550133\t0.00303180157266137\t-1.39473253235696e-17\t-0.00326339411777804\t0.00951876635645874\t0.0111482334116767\t-7.21063203119500e-18\t0.00540165844085795\t0.0100086527904981\t-0.00614974362978429\t-0.0101121446643146\t0.000538065697023885\t-0.00934045250719534\t-0.0179501208303512\t2.17374326458067e-17\t0.00458748295262991\t-0.00714451527282437\t0.00824282416165526\t0.0232580624656131\t0.00513646381937592\t0.00298966870435512\t0.0200126066638186\t-2.76319429163796e-17\t-0.0223695778113029\t-0.00373724237210871\t-0.00718808279001902\t-0.0364947238111527\t-0.0145341644276564\t0.0141967570395320\t-0.0103104752891771\t1.15556347822627e-16\t0.0523850722232607\t0.0313736246263566\t-0.00209885464511804\t0.0463336342835804\t0.0335927322753149\t-0.0664768343548962\t-0.0448335734501431\t0\t-0.166855913322898\t-0.222053483784180\t0.158105605013810\t0.449734032959139\t0.158105605013810\t-0.222053483784180\t-0.166855913322898\t0\t-0.0448335734501431\t-0.0664768343548962\t0.0335927322753149\t0.0463336342835804\t-0.00209885464511804\t0.0313736246263566\t0.0523850722232607\t1.15556347822627e-16\t-0.0103104752891771\t0.0141967570395320\t-0.0145341644276564\t-0.0364947238111527\t-0.00718808279001902\t-0.00373724237210871\t-0.0223695778113029\t-2.76319429163796e-17\t0.0200126066638186\t0.00298966870435512\t0.00513646381937592\t0.0232580624656131\t0.00824282416165526\t-0.00714451527282437\t0.00458748295262991\t2.17374326458067e-17\t-0.0179501208303512\t-0.00934045250719534\t0.000538065697023885\t-0.0101121446643146\t-0.00614974362978429\t0.0100086527904981\t0.00540165844085795\t-7.21063203119500e-18\t0.0111482334116767\t0.00951876635645874\t-0.00326339411777804\t-1.39473253235696e-17\t0.00303180157266137\t-0.00821510913550133\t-0.00893676402471147\t-7.21675058253438e-18\t-0.00373321068230810\t-0.00641959383225668\t0.00365914058701042\t0.00557872154997813\t-0.000275067382330837\t0.00442169724692805\t0.00786267198717786\t1.63477914700881e-17\t-0.00171576226676693\t0.00246522364549477\t-0.00262077103889252\t-0.00680462205736687\t-0.00138074347524665\t-0.000737150642353651\t-0.00451755565101351\t-1.70956881587181e-17\t0.00420479647146799\t0.000638596535478298\t0.00111323505890050\t0.00510556105384251\t0.00182971474219376\t-0.00160125998347297\t0.00103666214190737\t4.50464825015110e-17\t-0.00410787152017713\t-0.00214733992811243\t0.000124132524352666\t-0.00233868335802764\t-0.00142445026255850\t0.00231971014975538\t0.00125163620137050\t5.63755722469833e-18\t0.00257564997908850\t0.00219345642563409\t-0.000749500956901239\t-6.38082885321873e-18\t0.000690273436148057\t-0.00186045613262307\t-0.00201188775439575\t-9.52437876235476e-18\t-0.000829036893841308\t-0.00141471096504049\t0.000799790958619829\t0.00120877793273388\t-5.90542926913762e-05\t0.000940149882153386\t0.00165492588564483\t1.81788076872846e-17\t-0.000353443460829516\t0.000502105581396477\t-0.000527584554480126\t-0.00135348348311770\t-0.000271284034347819\t-0.000143028393633871\t-0.000865435559158032\t-1.58096901435751e-17\t0.000784910439628181\t0.000117659638473586\t0.000202450550913525\t0.000916522266510848\t0.000324280852789874\t-0.000280251264485714\t0.000179235085265057\t8.79060786691984e-18\t-0.000694151368308835\t-0.000359086942294873\t2.05597875282510e-05\t-0.000384043196852398\t-0.000232191984115153\t0.000375855039448241\t0.000201897953248419\t-2.46576282319687e-18\t0.000414074939185426\t0.000353168982941690\t-0.000121156263881998\t-1.55746850936609e-18\t0.000113397400870325\t-0.000309513134087135\t-0.000340075006611201\t-1.88860254582444e-18\t-0.000146208435135275\t-0.000256275034349048\t0.000149393692759562\t0.000233734093549068"
private val fir = FIR(text.split('\t').map { it.toDouble() }.toList())
fun main() {
    val remote = remoteHub("信号").apply {
        openAllNetworks()
        println(networksInfo())
    }
    val stream = File("data.txt")
        .inputStream()
    val output = File("output.txt")
        .apply{ this.writeText("") }
        .outputStream()
    val list = mutableListOf<Char>()
    var i = 0
    while (stream.read() != ' '.toInt());
    while (true) {
//        Thread.sleep(1)
        println(++i)
        val char = stream.read()
                       .takeIf { it > 0 }?.toChar()
                   ?: break
        if (list.size >= 4 && char == ' ') {
            val text = String(list.toCharArray()).trim()
            var value = Integer.parseInt(text, 16)
            if (value > 32767) value -= 65536

            val num = value.toDouble()
            output.write("$num\n".toByteArray())
//            Thread.sleep(1)
//            remote.paint("信号", num)
            list.clear()
        } else if (char.isDigit() || char.isLetter())
            list += char
    }
}
